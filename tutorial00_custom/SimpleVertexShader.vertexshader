#version 330 core

layout(location = 0) in vec3 vertexPosition;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal;

uniform mat4 MVP;
uniform mat4 M;
uniform mat4 V;
uniform mat4 MV;
uniform vec3 lightPosition;

out vec2 uv;
out float distance;
out vec3 normalDirection_cameraspace;
out vec3 eyeDirection_cameraspace;
out vec3 lightDirection_cameraspace;

void main( void )
{
    gl_Position = MVP * vec4(vertexPosition, 1);

    uv = vertexUV;

    distance = length( (M * vec4(vertexPosition, 1)).xyz - lightPosition );

    normalDirection_cameraspace = (MV * vec4(vertexNormal, 0)).xyz;

    vec3 vertexPosition_cameraspace = (MV * vec4(vertexPosition, 1)).xyz;
    eyeDirection_cameraspace = 0 - vertexPosition_cameraspace;

    lightDirection_cameraspace =  (V * vec4(lightPosition, 1)).xyz - vertexPosition_cameraspace;
}